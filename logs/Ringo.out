* installing *source* package ‘Ringo’ ...
** using staged installation
** libs
g++ -std=gnu++14 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c mmeansd.cpp -o mmeansd.o
g++ -std=gnu++14 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c mmedian.cpp -o mmedian.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c region_overlap.c -o region_overlap.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c ringo_init.c -o ringo_init.o
g++ -std=gnu++14 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o Ringo.so mmeansd.o mmedian.o region_overlap.o ringo_init.o -L/usr/local/lib/R/lib -lR
installing to /__w/gha-build/gha-build/built/00LOCK-Ringo/00new/Ringo/libs
** R
** inst
** byte-compile and prepare package for lazy loading
Creating a generic function for ‘ls’ from package ‘base’ in package ‘Ringo’
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘Ringo’ as ‘Ringo_1.60.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (Ringo)
